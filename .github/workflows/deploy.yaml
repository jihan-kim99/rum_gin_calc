name: deploy-blazor-prod

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      TF_IN_AUTOMATION: true
      DOTNET_VERSION: "8.0.x"
      AZURE_WEBAPP_NAME: blazor-webapp-prod
      AZURE_RESOURCE_GROUP: rg-blazor-prod
      ARTIFACT_NAME: blazor-publish.zip

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore & test
        run: |
          dotnet restore
          dotnet test --no-restore

      - name: Publish app
        run: |
          dotnet publish ./rum_gin_calc.csproj -c Release -o publish
          cd publish
          zip -r ../${{ env.ARTIFACT_NAME }} .

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure resource group is removed
        run: |
          if az group show --name "$AZURE_RESOURCE_GROUP" >/dev/null 2>&1; then
            echo "Resource group exists. Deleting..."
            az group delete --name "$AZURE_RESOURCE_GROUP" --yes --output none
          else
            echo "Resource group not found. Skipping delete."
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform init/plan/apply
        working-directory: infra
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Deploy package
        run: |
          az webapp deploy \
            --resource-group $AZURE_RESOURCE_GROUP \
            --name $AZURE_WEBAPP_NAME \
            --src-path ${{ env.ARTIFACT_NAME }} \
            --type zip
